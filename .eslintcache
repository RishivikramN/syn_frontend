[{"C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\index.js":"1","C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\reportWebVitals.js":"2","C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\components\\App.js":"3","C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\contexts\\AuthContext.jsx":"4","C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\Endpoints.js":"5","C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\components\\authentication\\SignUp.jsx":"6","C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\components\\authentication\\Login.jsx":"7","C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\components\\authentication\\PrivateRouteHOC.jsx":"8","C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\components\\authentication\\CenteredContainer.jsx":"9","C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\components\\gameboard\\DashBoard.jsx":"10","C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\components\\gameboard\\NavBar.jsx":"11","C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\components\\gameboard\\StageArea.jsx":"12","C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\components\\gameboard\\GameLogin.js":"13","C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\contexts\\GameContext.jsx":"14"},{"size":536,"mtime":1612268067898,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":899,"mtime":1612500856657,"results":"18","hashOfConfig":"16"},{"size":1928,"mtime":1612596795777,"results":"19","hashOfConfig":"16"},{"size":370,"mtime":1612459670355,"results":"20","hashOfConfig":"16"},{"size":4043,"mtime":1612596944262,"results":"21","hashOfConfig":"16"},{"size":3207,"mtime":1612592894630,"results":"22","hashOfConfig":"16"},{"size":445,"mtime":1612446338682,"results":"23","hashOfConfig":"16"},{"size":400,"mtime":1612336717439,"results":"24","hashOfConfig":"16"},{"size":1253,"mtime":1612591957131,"results":"25","hashOfConfig":"16"},{"size":2379,"mtime":1612499276169,"results":"26","hashOfConfig":"16"},{"size":7737,"mtime":1612591012524,"results":"27","hashOfConfig":"16"},{"size":4661,"mtime":1612345667728,"results":"28","hashOfConfig":"16"},{"size":2043,"mtime":1612461166660,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"110qfmn",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},"C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\index.js",[],["64","65"],"C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\reportWebVitals.js",[],"C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\components\\App.js",[],"C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\contexts\\AuthContext.jsx",["66"],"import React, { useContext, useState } from 'react';\r\nimport useStateRef from \"react-usestateref\";\r\nimport axios from \"axios\";\r\nimport { signupEndpoint, signinEndpoint } from \"../Endpoints\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth(){\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({children}){\r\n    const [currentUser,setCurrentUser] = useState();\r\n    const [token, setToken] = useState(\"\");\r\n    const [serverError,setServerError, serverErrorRef] = useStateRef(\"\");\r\n\r\n    const signUp = async (username,email,password) => {\r\n        const JSONPayload = {\r\n            userName: username,\r\n            emailId : email,\r\n            password\r\n        }\r\n            setServerError(\"\");\r\n            const response = await axios.post(signupEndpoint, JSONPayload);\r\n            console.log(response.data.error);\r\n            if(response.data.error && response.data.error.length > 0){\r\n                setServerError(response.data.error);\r\n                console.log(serverErrorRef.current);\r\n            }\r\n            else\r\n                setCurrentUser(response.data);\r\n    }\r\n\r\n    const login = async ( email, password) =>{\r\n        const JSONPayload = {\r\n            emailId : email,\r\n            password\r\n        }\r\n        const result = await axios.post(signinEndpoint, JSONPayload);\r\n        setCurrentUser({emailId:email,userName:result.data.username});\r\n\r\n        setToken(result.data.token.toString());\r\n        localStorage.setItem(\"authtoken\",token);\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem(\"authtoken\");\r\n        setToken(\"\");\r\n    }\r\n\r\n    const value={\r\n        currentUser,\r\n        signUp,\r\n        login,\r\n        logout,\r\n        token,\r\n        serverError : serverErrorRef.current\r\n    }\r\n    return(\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n\r\n}","C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\Endpoints.js",[],"C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\components\\authentication\\SignUp.jsx",[],"C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\components\\authentication\\Login.jsx",[],"C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\components\\authentication\\PrivateRouteHOC.jsx",[],"C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\components\\authentication\\CenteredContainer.jsx",[],"C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\components\\gameboard\\DashBoard.jsx",["67"],"import React,{useState,useEffect} from 'react'\r\nimport {useAuth} from \"../../contexts/AuthContext\"\r\nimport { Container } from 'react-bootstrap'\r\nimport {useGameDetail} from \"../../contexts/GameContext\";\r\nimport NavBar from './NavBar'\r\nimport StageArea from './StageArea'\r\n\r\nexport default function DashBoard() {\r\n    const {currentUser} = useAuth();\r\n    const {getHighScore,highScore,gameCount} = useGameDetail();\r\n    const [loading,setLoading] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        getHighScore(currentUser.emailId);\r\n        setTimeout(()=>{\r\n            setLoading(false);\r\n        },1000);\r\n    },[]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <div style={{overflowY:\"hidden\"}}>\r\n            {    \r\n            loading ?\r\n            <div style={{marginLeft:\"750px\",marginTop:\"300px\"}} class=\"spinner-border text-primary\" role=\"status\"/>\r\n            :\r\n                <React.Fragment>\r\n                    <NavBar DashBoardScore={highScore} GameCount={gameCount}/>\r\n                    <Container>\r\n                        <StageArea/>\r\n                    </Container>\r\n                </React.Fragment>\r\n            }\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\components\\gameboard\\NavBar.jsx",["68"],"import React,{useEffect} from 'react'\r\nimport {Navbar as BootStrapNavBar,Nav} from \"react-bootstrap\"\r\nimport { Link,useHistory } from 'react-router-dom'\r\nimport {useAuth} from \"../../contexts/AuthContext\"\r\nimport {clearGameArea} from \"./StageArea\"\r\nimport {useGameDetail} from \"../../contexts/GameContext\"\r\n\r\n\r\nexport default function NavBar({DashBoardScore,GameCount}) {\r\n    const history = useHistory();\r\n\r\n    const {currentUser,logout} = useAuth();\r\n    const {getGameCount}  = useGameDetail();\r\n\r\n    const handleLogout = ()=>{\r\n        try{\r\n            logout();\r\n            history.push(\"/login\");\r\n            clearGameArea();\r\n        }\r\n        catch(ex){\r\n            \r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getGameCount(currentUser.emailId);\r\n    },[]);\r\n\r\n    return (\r\n        <BootStrapNavBar bg=\"primary\" variant=\"dark\" expand=\"sm\">\r\n            <BootStrapNavBar.Brand as={Link} to=\"/\">\r\n                <div className=\"text-light\">\r\n                Maze Mover\r\n                </div> \r\n            </BootStrapNavBar.Brand>     \r\n            <BootStrapNavBar.Toggle aria-controls=\"responsive-navbar-nav\" />    \r\n            <BootStrapNavBar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\"/>\r\n                <Nav>\r\n                    <Nav.Link as={Link} to=\"#\">\r\n                        <div className=\"text-light\">\r\n                            <strong>Hello! {currentUser && currentUser.userName} </strong>\r\n                        </div>\r\n                    </Nav.Link>\r\n                    <Nav.Link as={Link} to=\"#\">\r\n                        <div className=\"text-light\">\r\n                            <strong>Attempts Remaining :</strong> {GameCount}\r\n                        </div>\r\n                    </Nav.Link>\r\n                    <Nav.Link as={Link} to=\"#\">\r\n                        <div className=\"text-light\">\r\n                            <strong>Highest Score :</strong> {DashBoardScore}\r\n                        </div>\r\n                    </Nav.Link>\r\n                    <Nav.Link as={Link} to=\"#\" onClick={handleLogout}>\r\n                        <div className=\"text-light\">\r\n                            <strong>LogOut</strong>\r\n                        </div>\r\n                    </Nav.Link>\r\n                </Nav>\r\n            </BootStrapNavBar.Collapse>  \r\n        </BootStrapNavBar>\r\n    )\r\n}\r\n","C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\components\\gameboard\\StageArea.jsx",["69","70","71"],"import React,{useState,useEffect,useRef} from 'react'\r\nimport {Button} from \"react-bootstrap\"\r\nimport {useAuth} from \"../../contexts/AuthContext\"\r\nimport {useGameDetail} from \"../../contexts/GameContext\"\r\n\r\n//Global Variables\r\nvar myGameArea={};\r\nvar myGamePiece={};\r\nvar myObstacles = [];\r\nvar myscore={};\r\n\r\nexport default function StageArea() { \r\n    const canvasRef = useRef(null);\r\n    const restartRef = useRef(null);\r\n    const startRef = useRef(null);\r\n\r\n    const {addGameDetailLogs,updateHighScore,updateGameCount,gameCount}  = useGameDetail();\r\n    const {currentUser} = useAuth();\r\n\r\n    const [isCrashed,setIsCrashed] = useState(false);\r\n    const [score,setScore] = useState(0);\r\n    const [isGameStarted,setIsGameStarted] = useState(false);\r\n\r\n    const handleKeyDown = (event)=>{\r\n        switch(event.key){\r\n            case 'ArrowUp':\r\n                moveup();\r\n                break;\r\n            case 'ArrowDown':\r\n                movedown();\r\n                break;\r\n            case 'ArrowRight':\r\n                moveright();\r\n                break;\r\n            case 'ArrowLeft':\r\n                moveleft();\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleKeyUp = (event)=>{\r\n        clearmove();\r\n    }\r\n\r\n    const handleStartGame = ()=>{\r\n        setIsGameStarted(true);\r\n        startGame(canvasRef,restartRef);\r\n    };\r\n\r\n    const handleRestartGame = ()=>{\r\n        setIsGameStarted(true);\r\n        restartGame(canvasRef,restartRef);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        //Player\r\n        window.addEventListener('keydown',handleKeyDown);\r\n        window.addEventListener('keyup',handleKeyUp);\r\n\r\n        return ()=>{\r\n            window.removeEventListener('keydown',handleKeyDown);\r\n            window.removeEventListener('keyup',handleKeyUp);\r\n            if(isGameStarted)\r\n                clearGameArea();\r\n        }\r\n\r\n    },[]);\r\n\r\n    function startGame(canvasRef,restartRef){\r\n        myGameArea = new gamearea(canvasRef,restartRef);\r\n        myGamePiece = new component(30, 30, \"red\", 10, 75);\r\n        myscore = new component(\"0px\", \"Consolas\", \"black\", 220, 25, \"text\");\r\n        myGameArea.start();\r\n   }\r\n\r\n   function restartGame(canvasRef,restartRef) {\r\n    //document.getElementById(\"myfilter\").style.display = \"none\";\r\n    //document.getElementById(\"myrestartbutton\").style.display = \"none\";\r\n    myGameArea.stop();\r\n    myGameArea.clear();\r\n    myGameArea = {};\r\n    myGamePiece = {};\r\n    myObstacles = [];\r\n    myscore = {};\r\n    //document.getElementById(\"canvascontainer\").innerHTML = \"\";\r\n    startGame(canvasRef,restartRef)\r\n  }\r\n\r\nfunction gamearea(canvasRef,restartRef) {\r\n    this.canvas = canvasRef.current;\r\n    this.canvas.width = 800;\r\n    this.canvas.height = 500;    \r\n    this.context = this.canvas.getContext(\"2d\");\r\n    this.pause = false;\r\n    this.frameNo = 0;\r\n    this.start = function() {\r\n      this.interval = setInterval(()=>{updateGameArea(restartRef)}, 20);\r\n    }\r\n    this.stop = function() {\r\n      clearInterval(this.interval);\r\n      this.pause = true;\r\n    }\r\n    this.clear = function(){\r\n      this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n  }\r\n\r\n  function component(width, height, color, x, y, type) {\r\n\r\n    this.type = type;\r\n    if (type === \"text\") {\r\n      this.text = color;\r\n    }\r\n    this.score = 0;    \r\n    this.width = width;\r\n    this.height = height;\r\n    this.speedX = 0;\r\n    this.speedY = 0;    \r\n    this.x = x;\r\n    this.y = y;    \r\n    this.update = function() {\r\n      var ctx = myGameArea.context;\r\n      if (this.type === \"text\") {\r\n        ctx.font = this.width + \" \" + this.height;\r\n        ctx.fillStyle = color;\r\n        ctx.fillText(this.text, this.x, this.y);\r\n      } else {\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(this.x, this.y, this.width, this.height);\r\n      }\r\n    }\r\n    this.crashWith = function(otherobj) {\r\n      var myleft = this.x;\r\n      var myright = this.x + (this.width);\r\n      var mytop = this.y;\r\n      var mybottom = this.y + (this.height);\r\n      var otherleft = otherobj.x;\r\n      var otherright = otherobj.x + (otherobj.width);\r\n      var othertop = otherobj.y;\r\n      var otherbottom = otherobj.y + (otherobj.height);\r\n      var crash = true;\r\n      setIsCrashed(crash);\r\n      if ((mybottom < othertop) || (mytop > otherbottom) || (myright < otherleft) || (myleft > otherright)) {\r\n        crash = false;\r\n        setIsCrashed(crash);\r\n      }\r\n      return crash;\r\n    }\r\n  }\r\n\r\n    function updateGameArea(restartRef) {\r\n        var x, y, min, max, height, gap;\r\n        for (let i = 0; i < myObstacles.length; i += 1) {\r\n            if (myGamePiece.crashWith(myObstacles[i])) {\r\n                myGameArea.stop();\r\n                addGameDetailLogs(currentUser.emailId,myscore.score);\r\n                updateHighScore(myscore.score);\r\n                updateGameCount(-1);\r\n                return;\r\n            } \r\n        }\r\n        if (myGameArea.pause === false) {\r\n            myGameArea.clear();\r\n            myGameArea.frameNo += 1;\r\n            myscore.score +=1;      \r\n            setScore(myscore.score);  \r\n            if (myGameArea.frameNo === 1 || everyinterval(150)) {\r\n                x = myGameArea.canvas.width;\r\n                y = myGameArea.canvas.height - 100;\r\n                min = 20;\r\n                max = 100;\r\n                height = Math.floor(Math.random()*(max-min+1)+min);\r\n                min = 50;\r\n                max = 100;\r\n                gap = Math.floor(Math.random()*(max-min+1)+min);\r\n                myObstacles.push(new component(10, height, \"green\", x, 0));\r\n                myObstacles.push(new component(10, x - height - gap, \"green\", x, height + gap));\r\n            }\r\n            for (let i = 0; i < myObstacles.length; i += 1) {\r\n                myObstacles[i].x += -1;\r\n                myObstacles[i].update();\r\n            }       \r\n            myscore.update();\r\n            myGamePiece.x += myGamePiece.speedX;\r\n            myGamePiece.y += myGamePiece.speedY;    \r\n            myGamePiece.update();\r\n        }\r\n    }\r\n\r\n    function everyinterval(n) {\r\n        if ((myGameArea.frameNo / n) % 1 === 0) {return true;}\r\n        return false;\r\n    }\r\n\r\n    function moveup() {\r\n        myGamePiece.speedY = -1; \r\n    }\r\n\r\n    function movedown() {\r\n        myGamePiece.speedY = 1; \r\n    }\r\n\r\n    function moveleft() {\r\n        myGamePiece.speedX = -1; \r\n    }\r\n\r\n    function moveright() {\r\n        myGamePiece.speedX = 1; \r\n    }\r\n\r\n    function clearmove() {\r\n        myGamePiece.speedX = 0; \r\n        myGamePiece.speedY = 0; \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"d-flex\">\r\n                <div>{(gameCount>0) &&<h2 className=\"mt-3\">Score: {score}</h2>}</div>\r\n                <div className=\"ml-3 mt-3\">{isCrashed && <h2 style={{color:\"red\"}}>Game Over !!</h2>}</div>\r\n            </div>\r\n            \r\n            {(gameCount>0) && <canvas className=\"mt-3\" style={{backgroundColor:\"white\",width:800,height:500}} ref={canvasRef}/>}\r\n            <div className=\"d-flex mt-5\">\r\n                {isCrashed && (gameCount > 0) && <Button ref={restartRef} onClick={handleRestartGame}>\r\n                    Restart \r\n                </Button>}\r\n                {!isCrashed && !isGameStarted && (gameCount > 0) && <Button ref={startRef} onClick={handleStartGame}>\r\n                    Start\r\n                </Button>}\r\n                {(gameCount<=0)?<h2>Attempt is over! come back tomorrow</h2> : null}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport function clearGameArea(){\r\n    myGameArea.stop();\r\n    myGameArea.clear();\r\n    myGameArea = {};\r\n    myGamePiece = {};\r\n    myObstacles = [];\r\n    myscore = {};\r\n  }","C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\components\\gameboard\\GameLogin.js",["72","73"],"C:\\Users\\rishi\\OneDrive\\Desktop\\syn_frontend\\src\\contexts\\GameContext.jsx",["74"],"import React, { useContext, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { gameDetailEndpoint,highScoreEndpoint,gameCountEndpoint } from \"../Endpoints\";\r\nimport {useAuth} from \"./AuthContext\";\r\n\r\nconst GameDetailContext = React.createContext();\r\n\r\nexport function useGameDetail(){\r\n    return useContext(GameDetailContext);\r\n}\r\n\r\nexport function GameDetailProvider({children}){\r\n    const [highScore,setHighScore] = useState(0);\r\n    const [gameCount,setGameCount] = useState(0);\r\n    const {token} = useAuth();\r\n\r\n    const addGameDetailLogs = async (email,score) => {\r\n        const JSONPayload = {\r\n            emailId : email,\r\n            score,\r\n            date: new Date().toDateString()\r\n        }\r\n        \r\n        const response = await axios.post(gameDetailEndpoint, JSONPayload,{headers:{\r\n            'x-auth-token' : token\r\n        }});\r\n    }\r\n\r\n    const getHighScore = async (email)=>{\r\n        const JSONPayload = {\r\n            emailId : email\r\n        }\r\n\r\n        const response = await axios.post(highScoreEndpoint, JSONPayload,{headers:{\r\n            'x-auth-token' : token\r\n        }});\r\n            \r\n        setHighScore(response.data.score);\r\n    }\r\n\r\n    const getGameCount = async(email) => {\r\n        const JSONPayload={\r\n            emailId : email\r\n        }\r\n        const response = await axios.post(gameCountEndpoint, JSONPayload,{headers:{\r\n            'x-auth-token' : token\r\n        }});\r\n\r\n        setGameCount(10 - response.data.count);\r\n    }\r\n\r\n    const updateGameCount = (count) => {\r\n        setGameCount(gameCount + count);\r\n    }\r\n\r\n    const updateHighScore = (score) => {\r\n        if(score > highScore)\r\n            setHighScore(score);\r\n    }\r\n\r\n    const value={\r\n        addGameDetailLogs,\r\n        getHighScore,\r\n        highScore,\r\n        updateHighScore,\r\n        gameCount,\r\n        getGameCount,\r\n        updateGameCount\r\n    }\r\n    return(\r\n        <GameDetailContext.Provider value={value}>\r\n            {children}\r\n        </GameDetailContext.Provider>\r\n    )\r\n\r\n}",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":15,"column":12,"nodeType":"81","messageId":"82","endLine":15,"endColumn":23},{"ruleId":"83","severity":1,"message":"84","line":19,"column":7,"nodeType":"85","endLine":19,"endColumn":9,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":28,"column":7,"nodeType":"85","endLine":28,"endColumn":9,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":25,"column":9,"nodeType":"91","messageId":"92","endLine":38,"endColumn":10},{"ruleId":"83","severity":1,"message":"93","line":67,"column":7,"nodeType":"85","endLine":67,"endColumn":9,"suggestions":"94"},{"ruleId":"79","severity":1,"message":"95","line":169,"column":17,"nodeType":"81","messageId":"82","endLine":169,"endColumn":18},{"ruleId":"79","severity":1,"message":"95","line":102,"column":13,"nodeType":"81","messageId":"82","endLine":102,"endColumn":14},{"ruleId":"89","severity":1,"message":"90","line":125,"column":2,"nodeType":"91","messageId":"92","endLine":138,"endColumn":3},{"ruleId":"79","severity":1,"message":"96","line":24,"column":15,"nodeType":"81","messageId":"82","endLine":24,"endColumn":23},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'serverError' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser.emailId' and 'getHighScore'. Either include them or remove the dependency array.","ArrayExpression",["99"],"React Hook useEffect has missing dependencies: 'currentUser.emailId' and 'getGameCount'. Either include them or remove the dependency array.",["100"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'handleKeyDown', 'handleKeyUp', and 'isGameStarted'. Either include them or remove the dependency array.",["101"],"'y' is assigned a value but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [currentUser.emailId, getHighScore]",{"range":"108","text":"109"},"Update the dependencies array to be: [currentUser.emailId, getGameCount]",{"range":"110","text":"111"},"Update the dependencies array to be: [handleKeyDown, handleKeyUp, isGameStarted]",{"range":"112","text":"113"},[643,645],"[currentUser.emailId, getHighScore]",[775,777],"[currentUser.emailId, getGameCount]",[1878,1880],"[handleKeyDown, handleKeyUp, isGameStarted]"]